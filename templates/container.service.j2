[Unit]
Description=Podman container-{{ container.name }}.service
Documentation=https://github.com/edvgui/inmanta-module-podman
Wants=network-online.target
After=network-online.target
RequiresMountsFor=%t/containers
{%- if container.pod is not none %}
BindsTo=pod-{{ container.pod.name }}.service
After=pod-{{ container.pod.name }}.service
{%- endif %}

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
Restart=on-failure
TimeoutStopSec=70
ExecStart=/usr/bin/podman run \
        --cidfile=%t/%n.ctr-id \
        --cgroups=no-conmon \
        {% if container.pod is not none -%}
        --pod-id-file=%t/pod-{{ container.pod.name }}.pod-id \
        {% endif -%}
        --sdnotify=conmon \
        -d \
        --replace \
        {% for network in container.networks -%}
        --network={{ network.cli_option }} \
        {% endfor -%}
        {% for publish in container.publish -%}
        --publish={{ publish.cli_option }} \
        {% endfor -%}
        {% if container.hostname is not none -%}
        --hostname={{ container.hostname }} \
        {% endif -%}
        --name={{ container.name }} \
        {% for volume in container.volumes -%}
        --volume={{ volume.cli_option }} \
        {% endfor -%}
        {% for key, value in container.env.items() -%}
        --env={{ key }}={{ value }} \
        {% endfor -%}
        {% if container.env_file is not none -%}
        --env-file={{ container.env_file }} \
        {% endif -%}
        {% if container.entrypoint is not none -%}
        --entrypoint={{ container.entrypoint }} \
        {% endif -%}
        {{ container.image }} {% if container.command is not none %}{{ container.command }}{% endif %}
ExecStop=/usr/bin/podman stop \
        --ignore -t 10 \
        --cidfile=%t/%n.ctr-id
ExecStopPost=/usr/bin/podman rm \
        -f \
        --ignore -t 10 \
        --cidfile=%t/%n.ctr-id
Type=notify
NotifyAccess=all

[Install]
WantedBy=default.target
